{"meta":{"title":"gucong","subtitle":null,"description":null,"author":"John Doe","url":"http://yoursite.com"},"pages":[{"title":"","date":"2017-08-14T10:09:01.740Z","updated":"2017-08-14T10:08:23.000Z","comments":true,"path":"404.html","permalink":"http://yoursite.com/404.html","excerpt":"","text":"layout:404title:”[404]”description:”May the Force be with you :&#41;”"}],"posts":[{"title":"Vue 内部指令","slug":"vueIn","date":"2018-04-09T09:34:21.266Z","updated":"2018-04-09T10:35:54.161Z","comments":true,"path":"2018/04/09/vueIn/","link":"","permalink":"http://yoursite.com/2018/04/09/vueIn/","excerpt":"","text":"Vue 内部指令v-if v-else v-show 指令v-if 用来判断是否加载html的DOM，比如常用到的用户登录状态、权限管理、页面加载等v-else 紧跟在v-if后面，表示v-if条件不成立时执行 语法v-if=”判断表达式” 12&lt;div v-if=&quot;isLogin&quot;&gt;您好，JM浅蓝&lt;/div&gt;&lt;div v-else&gt;请登录&lt;/div&gt; v-show DOM元素的隐藏和显示，调整的是css的display属性 语法v-show=”判断表达式” 1&lt;div v-show=&quot;isShow&quot;&gt; &lt;/div&gt; v-if和v-show的区别v-if：判断是否加载，可以减轻服务器的压力，在需要的时候加载。v-show：调整css display的属性，可以使客户端操作更加流畅。 v-for 指令v-for指令是循环渲染一组data中的数组，v-for指令需要以item in items形式的特殊语法，items是源数据数组并且item是数组元素迭代的别名。 123&lt;li v-for=&quot;item in items&quot;&gt; &#123;&#123;item&#125;&#125;&lt;/li&gt; v-text 和 v-htmlv-text 在html页面输出data的值 1&lt;p v-text=&quot;message&quot;&gt;&lt;/p&gt; v-html 当javascript有html标签时，v-text无法输出，使用v-html输出 1&lt;p v-html=&quot;vueHtml&quot;&gt;&lt;/p&gt; v-on 绑定事件监听器v-on 就是监听事件，可以用v-on指令监听DOM事件来触发一些javascript代码，v-on的缩写形式是@ 12&lt;button v-on:click=&quot;add&quot;&gt;&lt;/button&gt;&lt;button @click=&quot;reduce&quot;&gt;&lt;/button&gt; v-model 双向数据绑定v-model 这个指令只能用在、、 这些表单元素上，所谓双向绑定，指的是我们在vue实例中的data与其渲染的DOM元素上的内容一致，两者有一方值被改变，另外一方也会随之更新。 12345&lt;div id=&quot;app&quot;&gt; &lt;p&gt;js定义的message原文本：&#123;&#123;message&#125;&#125;&lt;/p&gt; &lt;h3&gt;文本框&lt;/h3&gt; &lt;p&gt;双向绑定的文本：&lt;input type=&quot;text&quot; v-model=&quot;message&quot;&gt;&lt;/p&gt;&lt;/div&gt; 修饰符.lazy:取代input监听change事件，当值改变的时候随之改变。.number:输入的数字随之改变.trim: 去掉输入框的首尾空格 v-bindv-bind:处理html标签的内部属性 例如对a标签的href属性动态赋值,还用来绑定标签的css样式，缩写形式为：12&lt;a v-bind:href=&quot;vueURL&quot;&gt;&lt;/a&gt;&lt;a :href=&quot;vueURL&quot;&gt;&lt;/a&gt; v-pre v-cloak v-oncev-pre: 不输出Vue实例中的data值 不被Vue编译直接打印原数据如v-cloak:渲染完指定的DOM之后才显示，和css样式一起使用v-once：只渲染一次 渲染后的值静态输出 不再改变","categories":[{"name":"Vue","slug":"Vue","permalink":"http://yoursite.com/categories/Vue/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://yoursite.com/tags/Vue/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-08-14T09:09:47.167Z","updated":"2017-08-14T09:09:47.168Z","comments":true,"path":"2017/08/14/hello-world/","link":"","permalink":"http://yoursite.com/2017/08/14/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"name","slug":"（url中显示的标题）","date":"2016-04-06T02:34:21.000Z","updated":"2017-08-15T08:24:12.815Z","comments":true,"path":"2016/04/06/（url中显示的标题）/","link":"","permalink":"http://yoursite.com/2016/04/06/（url中显示的标题）/","excerpt":"","text":"Hello world，Test！！","categories":[{"name":"日志","slug":"日志","permalink":"http://yoursite.com/categories/日志/"}],"tags":[{"name":"开始","slug":"开始","permalink":"http://yoursite.com/tags/开始/"},{"name":"日志","slug":"日志","permalink":"http://yoursite.com/tags/日志/"}]}]}